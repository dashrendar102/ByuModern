<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="DataBinding.Scenario8"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DataBinding"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel>
                <TextBlock Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap" Text="The demonstration below shows how to bind to an incremental loading collection and receive notifications when the collection changes using INotifyCollectionChanged. Take a look at IncrementalLoadingBase.cs for more info on implementing ISupportIncrementalLoading. See GeneratorIncrementalLoadingClass.cs for more info on how you can use IncrementalLoadingBase to create your own incremental loading collection. " />
                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                    <Button x:Name="scenario8Reset" Content="Load Data" Margin="0,0,10,0" Click="Scenario8Reset" />
                </StackPanel>
            </StackPanel>

        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <StackPanel>
                <StackPanel.Resources>
                    <CollectionViewSource x:Name="employeesCVS"/>
                </StackPanel.Resources>
                <ListView x:Name="lvEmployees" Height="200" ItemsSource="{Binding Source={StaticResource employeesCVS}}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Center">
                                    <Run Text="Name: " FontWeight="Bold"/>
                                    <Run Text="{Binding Name}"/>
                                </TextBlock>
                                <TextBlock Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Center">
                                    <Run Text="Organization: " FontWeight="Bold"/>
                                    <Run Text="{Binding Organization}"/>
                                </TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <TextBlock x:Name="tbCollectionChangeStatus" Style="{StaticResource BasicTextStyle}"/>
            </StackPanel>
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
