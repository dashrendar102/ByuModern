<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="ScrollViewerSample.Scenario1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ScrollViewerSample"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="White" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1"  TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                Panning and Scrolling are used to allow an end-user reach additional content that otherwise would not fit into a view. There are a few types of panning and scrolling to consider:<LineBreak/><LineBreak/>
            1. Horizontal - User can move content left/right<LineBreak/>
            2. Vertical - User can move content up/down<LineBreak/>
            3. Both Axes - By setting both Horizontal and Vertical, user can move content along both axes<LineBreak/><LineBreak/>
            Rails provide support for locking user motion in one direction once the motion is started:<LineBreak/><LineBreak/>
            1. Unrailed - User is free to move the content in any direction<LineBreak/>
            2. Railed - User motion is locked to an axis if the motion is "close enough" to the axis.<LineBreak/><LineBreak/> 
            Select from the following settings to observe the changes in the output window:
            </TextBlock>
            <Grid x:Name="FilterGrid" Grid.Row="1" Margin="0,10,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="1" Text="ScrollMode" Style="{StaticResource TitleTextStyle}" />
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="ScrollbarVisibility" Style="{StaticResource TitleTextStyle}" />
                    <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource BasicTextStyle}" Text="Horizontal" />
                    <ComboBox Grid.Row="1" Grid.Column="1" x:Name="hsmCombo" SelectedIndex="1" SelectionChanged="hsmCombo_SelectionChanged_1" >
                        <ComboBoxItem>Auto</ComboBoxItem>
                        <ComboBoxItem>Enabled</ComboBoxItem>
                        <ComboBoxItem>Disabled</ComboBoxItem>
                    </ComboBox>
                    <ComboBox Grid.Row="1" Grid.Column="2" x:Name="hsbvCombo" SelectedIndex="3" SelectionChanged="hsbvCombo_SelectionChanged_1">
                        <ComboBoxItem>Auto</ComboBoxItem>
                        <ComboBoxItem>Visible</ComboBoxItem>
                        <ComboBoxItem>Hidden</ComboBoxItem>
                        <ComboBoxItem>Disabled</ComboBoxItem>
                    </ComboBox>

                    <TextBlock Grid.Row="2" Grid.Column="0" Style="{StaticResource BasicTextStyle}" Text="Vertical" />
                    <ComboBox Grid.Row="2" Grid.Column="1" x:Name="vsmCombo" SelectedIndex="1" SelectionChanged="vsmCombo_SelectionChanged_1" >
                        <ComboBoxItem>Auto</ComboBoxItem>
                        <ComboBoxItem>Enabled</ComboBoxItem>
                        <ComboBoxItem>Disabled</ComboBoxItem>
                    </ComboBox>
                    <ComboBox Grid.Row="2" Grid.Column="2" x:Name="vsbvCombo" SelectedIndex="1" SelectionChanged="vsbvCombo_SelectionChanged_1" >
                        <ComboBoxItem>Auto</ComboBoxItem>
                        <ComboBoxItem>Visible</ComboBoxItem>
                        <ComboBoxItem>Hidden</ComboBoxItem>
                        <ComboBoxItem>Disabled</ComboBoxItem>
                    </ComboBox>
                </Grid>
                <Grid Grid.Row="1" Margin="0,10,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <CheckBox Grid.Column="0" x:Name="hrCheckbox" Checked="CheckBox_Checked_HorizontalRailed" Unchecked="CheckBox_Unchecked_HorizontalRailed">Horizontal Railed</CheckBox>
                    <CheckBox Grid.Column="1" x:Name="vrCheckbox" Checked="CheckBox_Checked_VerticalRailed" Unchecked="CheckBox_Unchecked_VerticalRailed">Vertical Railed</CheckBox>
                </Grid>
                <Button Grid.Row="2" x:Name="scenario1Clear" Content="Reset" Click="Scenario1Reset" Margin="0,10,0,0"/>
            </Grid>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <ScrollViewer x:Name="scrollViewer"
                      Width="480" Height="270" 
                      ZoomMode="Disabled"
                      HorizontalAlignment="Left" VerticalAlignment="Top">
                <Image AutomationProperties.Name="Image of a cliff" Source="images/cliff.jpg" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            </ScrollViewer>
        </Grid>
        
        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
